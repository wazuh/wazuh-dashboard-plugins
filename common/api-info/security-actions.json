{
  "active-response:command": {
    "description": "Allow to execute active response commands in the agents",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "active-response:command"
      ],
      "resources": [
        "agent:id:001"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "PUT /active-response"
    ]
  },
  "agent:delete": {
    "description": "Delete system's agents",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "agent:delete"
      ],
      "resources": [
        "agent:id:010"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "DELETE /agents"
    ]
  },
  "agent:read": {
    "description": "Access to one or more agents basic information (id, name, group, last keep alive, etc)",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "agent:read"
      ],
      "resources": [
        "agent:id:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /agents",
      "GET /agents/{agent_id}/config/{component}/{configuration}",
      "GET /agents/{agent_id}/group/is_sync",
      "GET /agents/{agent_id}/key",
      "GET /groups/{group_id}/agents",
      "GET /agents/no_group",
      "GET /agents/outdated",
      "GET /agents/stats/distinct",
      "GET /agents/summary/os",
      "GET /agents/summary/status",
      "GET /overview/agents"
    ]
  },
  "agent:create": {
    "description": "Create new agents",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "agent:create"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "POST /agents",
      "POST /agents/insert",
      "POST /agents/insert/quick"
    ]
  },
  "agent:modify_group": {
    "description": "Change the group of specified agent",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "agent:modify_group"
      ],
      "resources": [
        "agent:id:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "DELETE /agents/{agent_id}/group",
      "DELETE /agents/{agent_id}/group/{group_id}",
      "PUT /agents/{agent_id}/group/{group_id}",
      "DELETE /agents/group",
      "PUT /agents/group",
      "DELETE /groups"
    ]
  },
  "group:modify_assignments": {
    "description": "Allow to change the agents assigned to the group",
    "resources": [
      "group:id"
    ],
    "example": {
      "actions": [
        "group:modify_assignments"
      ],
      "resources": [
        "group:id:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "DELETE /agents/{agent_id}/group",
      "DELETE /agents/{agent_id}/group/{group_id}",
      "PUT /agents/{agent_id}/group/{group_id}",
      "DELETE /agents/group",
      "PUT /agents/group",
      "DELETE /groups"
    ]
  },
  "agent:restart": {
    "description": "Restart Wazuh for allowed agents",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "agent:restart"
      ],
      "resources": [
        "agent:id:050",
        "agent:id:049"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "PUT /agents/{agent_id}/restart",
      "PUT /agents/group/{group_id}/restart",
      "PUT /agents/node/{node_id}/restart",
      "PUT /agents/restart"
    ]
  },
  "agent:upgrade": {
    "description": "Upgrade the version of an agent",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "agent:upgrade"
      ],
      "resources": [
        "agent:id:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "PUT /agents/{agent_id}/upgrade",
      "PUT /agents/{agent_id}/upgrade_custom",
      "GET /agents/{agent_id}/upgrade_result"
    ]
  },
  "group:delete": {
    "description": "Delete system's groups",
    "resources": [
      "group:id"
    ],
    "example": {
      "actions": [
        "group:delete"
      ],
      "resources": [
        "group:id:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "DELETE /groups"
    ]
  },
  "group:read": {
    "description": "Access to one or more groups basic information (id, name, agents, etc)",
    "resources": [
      "group:id"
    ],
    "example": {
      "actions": [
        "group:create"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /groups",
      "GET /groups/{group_id}/agents",
      "GET /groups/{group_id}/configuration",
      "GET /groups/{group_id}/files",
      "GET /groups/{group_id}/files/{file_name}/json",
      "GET /groups/{group_id}/files/{file_name}/xml",
      "GET /overview/agents"
    ]
  },
  "group:create": {
    "description": "Create new groups",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "group:create"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "POST /groups"
    ]
  },
  "group:update_config": {
    "description": "Change group's configuration",
    "resources": [
      "group:id"
    ],
    "example": {
      "actions": [
        "group:update_config"
      ],
      "resources": [
        "group:id:*"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "PUT /groups/{group_id}/configuration"
    ]
  },
  "cluster:read": {
    "description": "Read Wazuh's cluster configuration",
    "resources": [
      "node:id"
    ],
    "example": {
      "actions": [
        "cluster:read"
      ],
      "resources": [
        "node:id:worker1",
        "node:id:worker3"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "PUT /agents/node/{node_id}/restart",
      "GET /cluster/local/info",
      "GET /cluster/nodes",
      "GET /cluster/healthcheck",
      "GET /cluster/local/config",
      "GET /cluster/{node_id}/status",
      "GET /cluster/{node_id}/info",
      "GET /cluster/{node_id}/configuration",
      "GET /cluster/{node_id}/stats",
      "GET /cluster/{node_id}/stats/hourly",
      "GET /cluster/{node_id}/stats/weekly",
      "GET /cluster/{node_id}/stats/analysisd",
      "GET /cluster/{node_id}/stats/remoted",
      "GET /cluster/{node_id}/logs",
      "GET /cluster/{node_id}/logs/summary",
      "PUT /cluster/{node_id}/configuration",
      "PUT /cluster/restart",
      "GET /cluster/configuration/validation",
      "GET /cluster/{node_id}/configuration/{component}/{configuration}"
    ]
  },
  "ciscat:read": {
    "description": "Get CIS-CAT results for a list of agents",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "ciscat:read"
      ],
      "resources": [
        "agent:id:001",
        "agent:id:003"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "GET /ciscat/{agent_id}/results",
      "GET /experimental/ciscat/results"
    ]
  },
  "cluster:status": {
    "description": "Check Wazuh's cluster status",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "cluster:status"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /cluster/status"
    ]
  },
  "cluster:read_api_config": {
    "description": "Check Wazuh's cluster API configuration",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "cluster:read_api_config"
      ],
      "resources": [
        "node:id:worker1",
        "node:id:worker3"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /cluster/api/config"
    ]
  },
  "cluster:update_api_config": {
    "description": "Modify Wazuh's cluster API configuration",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "cluster:update_api_config"
      ],
      "resources": [
        "node:id:worker1",
        "node:id:worker3"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "PUT /cluster/api/config",
      "DELETE /cluster/api/config"
    ]
  },
  "cluster:update_config": {
    "description": "Update configuration of Wazuh's cluster node",
    "resources": [
      "node:id"
    ],
    "example": {
      "actions": [
        "cluster:update_config"
      ],
      "resources": [
        "node:id:worker1"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "PUT /cluster/{node_id}/configuration"
    ]
  },
  "cluster:restart": {
    "description": "Restart Wazuh's cluster nodes",
    "resources": [
      "node:id"
    ],
    "example": {
      "actions": [
        "cluster:restart"
      ],
      "resources": [
        "node:id:worker1"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "PUT /cluster/restart"
    ]
  },
  "lists:read": {
    "description": "Read lists files",
    "resources": [
      "list:file"
    ],
    "example": {
      "actions": [
        "lists:read"
      ],
      "resources": [
        "list:file:audit-keys"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "GET /lists",
      "GET /lists/files"
    ]
  },
  "lists:update": {
    "description": "Update lists files",
    "resources": [
      "list:file",
      "*:*"
    ],
    "example": {
      "actions": [
        "lists:update"
      ],
      "resources": [
        "list:file:audit-keys"
      ],
      "effect": "deny"
    },
    "related_endpoints": [      
      "PUT /lists/files"
    ]
  },
  "lists:delete": {
    "description": "Delete lists files",
    "resources": [
      "list:file"
    ],
    "example": {
      "actions": [
        "lists:delete"
      ],
      "resources": [
        "list:file:audit-keys"
      ],
      "effect": "deny"
    },
    "related_endpoints": [      
      "DELETE /lists/files"
    ]
  },
  "manager:read": {
    "description": "Read Wazuh manager configuration",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "manager:read"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /manager/status",
      "GET /manager/info",
      "GET /manager/configuration",
      "GET /manager/stats",
      "GET /manager/stats/hourly",
      "GET /manager/stats/weekly",
      "GET /manager/stats/analysisd",
      "GET /manager/stats/remoted",
      "GET /manager/logs",
      "GET /manager/logs/summary",
      "PUT /manager/configuration",
      "PUT /manager/restart",
      "GET /manager/configuration/validation",
      "GET /manager/configuration/{component}/{configuration}"
    ]
  },  
  "manager:update_config": {
    "description": "Update the configuration of Wazuh manager node",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "manager:update_config"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "PUT /manager/configuration"
    ]
  },
  "manager:read_api_config": {
    "description": "Read Wazuh manager API configuration",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "manager:read_api_config"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /manager/api/config"
    ]
  },
  "manager:update_api_config": {
    "description": "Modify Wazuh manager API configuration",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "manager:update_api_config"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "PUT /manager/api/config",
      "DELETE /manager/api/config"
    ]
  },
  "manager:restart": {
    "description": "Restart Wazuh manager nodes",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "manager:restart"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "PUT /manager/restart"
    ]
  },
  "mitre:read": {
    "description": "Get attacks information from MITRE database.",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "mitre:read"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /mitre"
    ]
  },
  "rules:read": {
    "description": "Read rules files",
    "resources": [
      "rule:file"
    ],
    "example": {
      "actions": [
        "rules:read"
      ],
      "resources": [
        "rule:file:0610-win-ms_logs_rules.xml"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /rules",
      "GET /rules/groups",
      "GET /rules/requirement/{requirement}",
      "GET /rules/files",
      "GET /rules/files/{filename}/download"
    ]
  },
  "rules:update": {
    "description": "Update rules files",
    "resources": [
      "rule:file",
      "*:*"
    ],
    "example": {
      "actions": [
        "rules:update"
      ],
      "resources": [
        "rule:file:0610-win-ms_logs_rules.xml"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "PUT /rules/files"
    ]
  },
  "rules:delete": {
    "description": "Delete rules files",
    "resources": [
      "rule:file"
    ],
    "example": {
      "actions": [
        "rules:delete"
      ],
      "resources": [
        "rule:file:0610-win-ms_logs_rules.xml"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "DELETE /rules/files"
    ]
  },  
  "sca:read": {
    "description": "Get a list of policies analyzed in the configuration assessment for a given agent",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "sca:read"
      ],
      "resources": [
        "agent:id:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /sca/{agent_id}",
      "GET /sca/{agent_id}/checks/{policy_id}"
    ]
  },
  "syscheck:run": {
    "description": "Run syscheck",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "syscheck:run"
      ],
      "resources": [
        "agent:id:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "PUT /syscheck"
    ]
  },
  "syscheck:read": {
    "description": "Read information from syscheck's database",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "syscheck:read"
      ],
      "resources": [
        "agent:id:011"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /syscheck/{agent_id}",
      "GET /syscheck/{agent_id}/last_scan"
    ]
  },
  "syscheck:clear": {
    "description": "Clear the syscheck database for specified agents",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "syscheck:clear"
      ],
      "resources": [
        "agent:id:*"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "DELETE /syscheck/{agent_id}",
      "DELETE /experimental/syscheck"
    ]
  },
  "decoders:read": {
    "description": "Read decoders files",
    "resources": [
      "decoder:file"
    ],
    "example": {
      "actions": [
        "decoders:read"
      ],
      "resources": [
        "decoder:file:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /decoders",
      "GET /decoders/files",
      "GET /decoders/files/{filename}/download",
      "GET /decoders/parents"
    ]
  },
  "decoders:update": {
    "description": "Update decoders files",
    "resources": [
      "decoder:file",
      "*:*"   
    ],
    "example": {
      "actions": [
        "decoders:update"
      ],
      "resources": [
        "decoder:file:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "PUT /decoders/files"
    ]
  },
  "decoders:delete": {
    "description": "Delete decoders files",
    "resources": [
      "decoder:file"
    ],
    "example": {
      "actions": [
        "decoders:delete"
      ],
      "resources": [
        "decoder:file:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "DELETE /decoders/files"
    ]
  },
  "syscollector:read": {
    "description": "Get syscollector information about a specified agents",
    "resources": [
      "agent:id"
    ],
    "example": {
      "actions": [
        "syscollector:read"
      ],
      "resources": [
        "agent:id:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /experimental/syscollector/hardware",
      "GET /experimental/syscollector/netaddr",
      "GET /experimental/syscollector/netiface",
      "GET /experimental/syscollector/netproto",
      "GET /experimental/syscollector/os",
      "GET /experimental/syscollector/packages",
      "GET /experimental/syscollector/ports",
      "GET /experimental/syscollector/processes",
      "GET /experimental/syscollector/hotfixes",
      "GET /syscollector/{agent_id}/hardware",
      "GET /syscollector/{agent_id}/hotfixes",
      "GET /syscollector/{agent_id}/netaddr",
      "GET /syscollector/{agent_id}/netiface",
      "GET /syscollector/{agent_id}/netproto",
      "GET /syscollector/{agent_id}/os",
      "GET /syscollector/{agent_id}/packages",
      "GET /syscollector/{agent_id}/ports",
      "GET /syscollector/{agent_id}/processes"
    ]
  },
  "security:read": {
    "description": "Allow read information about system's security resources",
    "resources": [
      "policy:id",
      "role:id",
      "user:id"
    ],
    "example": {
      "actions": [
        "security:read"
      ],
      "resources": [
        "policy:id:*",
        "role:id:2",
        "user:id:5"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /security/roles",
      "GET /security/policies",
      "GET /security/users"
    ]
  },
  "security:create": {
    "description": "Create new system security resources",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "security:create"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "POST /security/roles",
      "POST /security/policies"
    ]
  },
  "security:delete": {
    "description": "Delete system's security resources",
    "resources": [
      "policy:id",
      "role:id",
      "user:id"
    ],
    "example": {
      "actions": [
        "security:update"
      ],
      "resources": [
        "policy:id:*",
        "role:id:3",
        "user:id:4"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "DELETE /security/roles",
      "DELETE /security/policies",
      "DELETE /security/roles/{role_id}/policies",
      "DELETE /security/users/{user_id}/roles",
      "DELETE /security/users"
    ]
  },
  "security:update": {
    "description": "Allow update the information of system's security resources",
    "resources": [
      "policy:id",
      "role:id",
      "user:id"
    ],
    "example": {
      "actions": [
        "security:update"
      ],
      "resources": [
        "policy:id:*",
        "role:id:4",
        "user:id:3"
      ],
      "effect": "deny"
    },
    "related_endpoints": [
      "PUT /security/roles/{role_id}",
      "PUT /security/policies/{policy_id}",
      "POST /security/roles/{role_id}/policies",
      "POST /security/users/{user_id}/roles",
      "PUT /security/users/{user_id}"
    ]
  },
  "security:create_user": {
    "description": "Create new system user",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "security:create_user"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "POST /security/users"
    ]
  },
  "security:read_config": {
    "description": "Read current security configuration",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "security:read_config"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "GET /security/config"
    ]
  },
  "security:update_config": {
    "description": "Update current security configuration",
    "resources": [
      "*:*"
    ],
    "example": {
      "actions": [
        "security:update_config"
      ],
      "resources": [
        "*:*:*"
      ],
      "effect": "allow"
    },
    "related_endpoints": [
      "PUT /security/config",
      "DELETE /security/config"
    ]
  }
}