version: "2.2"

x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://host.docker.internal:3100/loki/api/v1/push"

services:
  exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
    <<: *logging
    hostname: exporter-osd-${OS_VERSION}
    networks:
      - os-dev
      - mon
    command:
      - '--es.uri=https://admin:${PASSWORD}@os1:9200'
      - '--es.ssl-skip-verify'
      - '--es.all'

  imposter:
    image: outofcoffee/imposter
    hostname: imposter-osd-${OS_VERSION}
    networks:
      - os-dev
      - mon
    <<: *logging
    environment:
      - JAVA_OPTS="-Xmx512m -Xss512k -Dfile.encoding=UTF-8 -XX:MaxRAM=800m -XX:MaxRAMPercentage=95 -XX:MinRAMPercentage=60A"
      - MALLOC_ARENA_MAX=1
    volumes:
      - ../imposter:/opt/imposter/config
    ports:
       - ${IMPOSTER_PORT}:8080

  generator:
    image: cfssl/cfssl
    volumes:
      - certs:/certs/
      - ./config/certs:/conf
      - os_logs:/logs
      - os_data:/data
    entrypoint: /bin/bash
    command: >
        -c '
        	cd /certs
        	echo "Generating CA"
        	cfssl gencert -initca /conf/ca.json | cfssljson -bare ca

        	echo "Generating servers certificates"
        	for i in os1 osd imposter; do
        		echo "Generating cert for $$i"
        		cat /conf/host.json | \
        		sed "s/HOST/$$i/g" | \
        		cfssl gencert \
        			-ca /certs/ca.pem \
        			-ca-key /certs/ca-key.pem \
        			-config /conf/cfssl.json \
        			-profile=server - | \
        		cfssljson -bare $$i
        		openssl pkcs8 -topk8 -inform pem -in $$i-key.pem -outform pem -nocrypt -out $$i.key
        	done

        	echo "Generating clients certificates"
          	for i in admin filebeat; do
          		echo "Generating cert for $$i"
        		cat /conf/host.json | \
        		sed "s/HOST/$$i/g" | \
        		cfssl gencert \
        			-ca /certs/ca.pem \
        			-ca-key /certs/ca-key.pem \
        			-config /conf/cfssl.json \
        			-profile=client - | \
        		cfssljson -bare $$i
        		openssl pkcs8 -topk8 -inform pem -in $$i-key.pem -outform pem -nocrypt -out $$i.key
        	done

            echo "Setting up permissions"
            chmod 644 /certs/*
            chown 1000:1000 /certs/* /data /logs
            chmod 775 /certs /data /logs
            ls -al /certs/*

            sleep 30
        '
    healthcheck:
      test: ["CMD-SHELL", "[ -r /certs/os1.pem ]"]
      interval: 2s
      timeout: 5s
      retries: 10

  os1:
    depends_on:
      generator:
        condition: service_healthy
    image: opensearchproject/opensearch:${OS_VERSION}
    environment:
      - cluster.name=os-dev-cluster
      - node.name=os1
      - discovery.seed_hosts=os1
      - cluster.initial_master_nodes=os1
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - OPENSEARCH_PATH_CONF=/usr/share/opensearch/config/
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - certs:/usr/share/opensearch/config/certs/
      - ./config/os/opensearch.yml:/usr/share/opensearch/config/opensearch.yml
      - ./config/os/internal_users.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml
      - ./config/os/roles_mapping.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/roles_mapping.yml
      - ./config/os/roles.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/roles.yml  
      - os_logs:/var/log/os1
      - os_data:/var/lib/os1
    networks:
      - os-dev
    healthcheck:
      test: ["CMD-SHELL", "curl -s --cacert config/certs/ca.pem https://os1:9200 | grep -q 'Unauthorized'"]
      interval: 1s
      timeout: 5s
      retries: 120

  filebeat:
    depends_on:
      os1:
        condition: service_healthy
    image: elastic/filebeat:7.10.2
    hostname: filebeat
    user: "0:0"
    networks:
      - os-dev
    <<: *logging
    # restart: always
    entrypoint:
      - '/bin/bash'
    command: >
      -c '
        mkdir -p /etc/filebeat
        echo admin | filebeat keystore add username --stdin --force
        echo ${PASSWORD}| filebeat keystore add password --stdin --force
        curl -so /etc/filebeat/wazuh-template.json https://raw.githubusercontent.com/wazuh/wazuh/4.3/extensions/elasticsearch/7.x/wazuh-template.json
        curl -s https://packages.wazuh.com/4.x/filebeat/wazuh-filebeat-0.2.tar.gz | tar -xvz -C /usr/share/filebeat/module
        chmod go-w /usr/share/filebeat/filebeat.yml
        filebeat setup -e
        filebeat
      '
    volumes:
      - certs:/etc/ssl/elastic
      - ./config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml

  osd:
    depends_on:
      os1:
        condition: service_healthy
    image: quay.io/wazuh/osd-dev:${OSD_VERSION}
    hostname: osd
    networks:
      - os-dev
      - mon
    user: "1000:1000"
    <<: *logging
    ports:
      - ${OSD_PORT}:5601
    environment:
      - "LOGS=/proc/1/fd/1"
    entrypoint: ["tail", "-f", "/dev/null"]
    volumes:
      - osd_cache:/home/node/.cache
      - "${SRC}:/home/node/kbn/plugins/wazuh"
      - certs:/home/node/kbn/certs/
      - ./config/osd/opensearch_dashboards.yml:/home/node/kbn/config/opensearch_dashboards.yml
      - ./config/osd/wazuh.yml:/home/node/kbn/data/wazuh/config/wazuh.yml

networks:
  os-dev:
    name: os-dev-${OS_VERSION}
    driver: bridge
  mon:
    external: true

volumes:
  osd_cache:
  certs:
  os_logs:
  os_data:
