[script:run_diag]
match                 = /telemetry/diag
script                = splunk_instrumentation/telemetry_run_diag.py
scripttype            = persist
handler               = telemetry_run_diag.DiagRunner
requireAuthentication = true
output_modes          = json
passPayload           = true
passHttpCookies       = true
passSession           = true
passSystemAuth        = true
capability            = get_diag
python.version = python3

[script:list_diags]
match                 = /telemetry/diag/status
script                = splunk_instrumentation/telemetry_list_diags.py
scripttype            = persist
handler               = telemetry_list_diags.ListDiagsHandler
requireAuthentication = true
output_modes          = json
passPayload           = true
passHttpCookies       = true
passSession           = true
passSystemAuth        = true
capability            = get_diag
python.version = python3

[script:get_nodes_list]
match                 = /telemetry/nodes
script                = splunk_instrumentation/telemetry_get_nodes_list.py
scripttype            = persist
handler               = telemetry_get_nodes_list.ListNodes
requireAuthentication = true
output_modes          = json
passPayload           = true
passHttpCookies       = true
passSession           = true
python.version = python3

[script:instrumentation_controller]
match                 = /instrumentation_controller/*
script                = splunk_instrumentation/instrumentation_controller.py
scripttype            = persist
handler               = instrumentation_controller.InstrumentationRestHandler
requireAuthentication = true
output_modes          = json
passPayload           = true
passHttpCookies       = true
passSession           = true
passSystemAuth        = true
python.version = python3

[validation:savedsearch]
action.outputtelemetry = case( !match('action.outputtelemetry',  "^(1|true)$"), null(), !match('action.outputtelemetry.param.support',  "^(1|true)$") AND !match('action.outputtelemetry.param.anonymous',  "^(1|true)$") AND !match('action.outputtelemetry.param.license',  "^(1|true)$"), "At least one category must be set.", 'action.outputtelemetry.param.input' = "", "No input field set.",'action.outputtelemetry.param.component' = "", "No component name set.", !match('action.outputtelemetry.param.component',  "^[a-zA-Z0-9\.\_\-]+$"), "A valid component name must be specified (ony alphanumeric or .-_ characters allowed).", 1=1, null())
