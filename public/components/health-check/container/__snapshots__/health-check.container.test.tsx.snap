// Jest Snapshot v1, https://goo.gl/fbAQLP

import { i18n } from "@kbn/i18n";

const title1 = i18n.translate("wazuh.components.overview.github.panel.title1", {
  defaultMessage: "Check Wazuh API connection",
});
const title2 = i18n.translate("wazuh.components.overview.github.panel.title2", {
  defaultMessage: "Check Wazuh API version",
});
const title3 = i18n.translate("wazuh.components.overview.github.panel.title3", {
  defaultMessage: "Check alerts index pattern",
});
const title4 = i18n.translate("wazuh.components.overview.github.panel.title4", {
  defaultMessage: "Check monitoring index pattern",
});
const title5 = i18n.translate("wazuh.components.overview.github.panel.title5", {
  defaultMessage: "Check statistics index pattern",
});
const title6 = i18n.translate("wazuh.components.overview.github.panel.title6", {
  defaultMessage: "Check timelion:max_buckets setting",
});
const title7 = i18n.translate(
  "wazuh.components.common.welcome.comp.agent.sections.metaFields",
  {
    defaultMessage: "Check metaFields setting",
  }
);
const title8 = i18n.translate(
  "wazuh.components.common.welcome.comp.agent.sections.title8",
  {
    defaultMessage: "Check timepicker:timeDefaults setting",
  }
);
exports[`Health Check container should render a Health check screen 1`] = `
<div
  className="health-check"
>
  <img
    alt=""
    className="health-check-logo"
    src="/plugins/wazuh/assets/images/themes/light/logo.svg"
  />
  <div
    className="margin-top-30"
  >
    <EuiDescriptionList
      align="center"
      textStyle="reverse"
      type="column"
    >
      <CheckResult
        awaitFor={Array []}
        canRetry={true}
        checksReady={Object {}}
        cleanErrors={[Function]}
        handleCheckReady={[Function]}
        handleErrors={[Function]}
        isLoading={false}
        key="health_check_check_api"
        name="api"
        shouldCheck={true}
        showLogButton={false}
        title={title1}
        validationService={[Function]}
      />
      <CheckResult
        awaitFor={
          Array [
            "api",
          ]
        }
        checksReady={Object {}}
        cleanErrors={[Function]}
        handleCheckReady={[Function]}
        handleErrors={[Function]}
        isLoading={false}
        key="health_check_check_setup"
        name="setup"
        shouldCheck={true}
        showLogButton={false}
        title={title2}
        validationService={[Function]}
      />
      <CheckResult
        awaitFor={Array []}
        canRetry={true}
        checksReady={Object {}}
        cleanErrors={[Function]}
        handleCheckReady={[Function]}
        handleErrors={[Function]}
        isLoading={false}
        key="health_check_check_pattern"
        name="pattern"
        shouldCheck={true}
        showLogButton={false}
        title={title3}
        validationService={[Function]}
      />
      <CheckResult
        awaitFor={Array []}
        canRetry={true}
        checksReady={Object {}}
        cleanErrors={[Function]}
        handleCheckReady={[Function]}
        handleErrors={[Function]}
        isLoading={false}
        key="health_check_check_patternMonitoring"
        name="patternMonitoring"
        shouldCheck={true}
        showLogButton={false}
        title={title4}
        validationService={[Function]}
      />
      <CheckResult
        awaitFor={Array []}
        canRetry={true}
        checksReady={Object {}}
        cleanErrors={[Function]}
        handleCheckReady={[Function]}
        handleErrors={[Function]}
        isLoading={false}
        key="health_check_check_patternStatistics"
        name="patternStatistics"
        shouldCheck={true}
        showLogButton={false}
        title={title5}
        validationService={[Function]}
      />
      <CheckResult
        awaitFor={Array []}
        canRetry={true}
        checksReady={Object {}}
        cleanErrors={[Function]}
        handleCheckReady={[Function]}
        handleErrors={[Function]}
        isLoading={false}
        key="health_check_check_maxBuckets"
        name="maxBuckets"
        shouldCheck={true}
        showLogButton={false}
        title={title6}
      />
      <CheckResult
        awaitFor={Array []}
        canRetry={true}
        checksReady={Object {}}
        cleanErrors={[Function]}
        handleCheckReady={[Function]}
        handleErrors={[Function]}
        isLoading={false}
        key="health_check_check_metaFields"
        name="metaFields"
        shouldCheck={true}
        showLogButton={false}
        title={title7}
      />
      <CheckResult
        awaitFor={Array []}
        canRetry={true}
        checksReady={Object {}}
        cleanErrors={[Function]}
        handleCheckReady={[Function]}
        handleErrors={[Function]}
        isLoading={false}
        key="health_check_check_timeFilter"
        name="timeFilter"
        showLogButton={false}
        title={title8}
      />
    </EuiDescriptionList>
  </div>
  <EuiSpacer
    size="xl"
  />
</div>
`;
