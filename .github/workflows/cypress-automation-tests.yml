# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Cypress Automation Tests

on:
  push:
    branches:
      - 'disable'
  pull_request:
    branches:
      - '*.*-*.*'
  
jobs:
  setup-wazuh-kibana-app:
    name: Run setup environment wazuh kibana app
    #runs-on: self-hosted
    runs-on: ubuntu-18.04
    #container: cypress/browsers:node12.18.0-chrome83-ff77
    steps:
     - name: Step 01 - Set up environment variables
       env:
        SHOULD_TEST: ${{ contains(github.event.pull_request.body, 'SHOULD_TEST=TRUE') }}
       run: |
        if ${SHOULD_TEST} == true; then
        
        echo Base Branch: ${{ github.base_ref }}
        echo Head Branch: ${{ github.head_ref }}
        echo Run Test TRUE
        echo "RUN_TEST=true" >> $GITHUB_ENV
        
        echo "WAZUH_HEAD_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
        echo "${{ github.event.pull_request.body }}" > pull_request.body.txt
        
        echo "WAZUH_MANAGER_IMAGE=$(grep 'WAZUH_MANAGER_IMAGE=*' ./pull_request.body.txt | cut -d '=' -f2)" >> $GITHUB_ENV
        echo "WAZUH_AGENT_IMAGE=$(grep 'WAZUH_AGENT_IMAGE=*' ./pull_request.body.txt | cut -d '=' -f2)" >> $GITHUB_ENV
        echo "WAZUH_VERSION=$(grep 'WAZUH_VERSION=*' ./pull_request.body.txt | cut -d '=' -f2)" >> $GITHUB_ENV
        echo "ELASTIC_VERSION=$(grep 'ELASTIC_VERSION=*' ./pull_request.body.txt | cut -d '=' -f2)" >> $GITHUB_ENV
        
        echo "PATH_TEMPLATE_BASIC_CLUSTER_AGENT=$GITHUB_WORKSPACE/wazuh-app-environments/templates_elastic_prod/es_basic-wz_cluster-agent/" >> $GITHUB_ENV
        
        else
        
        echo Run Test FALSE
        echo "RUN_TEST=false" >> $GITHUB_ENV
        
        fi
     - name: Step 02 - Download Project wazuh-app-environments 
       if: ${{ env.RUN_TEST == 'true' }}
       uses: actions/checkout@v2
       with:
        repository: frankeros/wazuh-app-environments
        ref: 'master'
        path: wazuh-app-environments
        token: ${{ secrets.ENV_TEMPLATES_TOKEN }}
     - name: Step 03 - Configuring templates docker environment
       if: ${{ env.RUN_TEST == 'true'}}
       run: |
        cd $GITHUB_WORKSPACE/wazuh-app-environments/
        mkdir packages
        cd ${{ env.PATH_TEMPLATE_BASIC_CLUSTER_AGENT }}
        sed -i -e "s/WAZUH_MANAGER_IMAGE=.*/WAZUH_MANAGER_IMAGE=${{ env.WAZUH_MANAGER_IMAGE }}/g" ./.env
        sed -i -e "s/WAZUH_AGENT_IMAGE=.*/WAZUH_AGENT_IMAGE=${{ env.WAZUH_AGENT_IMAGE }}/g" ./.env
        sed -i -e "s/WAZUH_VERSION=.*/WAZUH_VERSION=${{ env.WAZUH_VERSION }}/g" ./.env
        sed -i -e "s/ELASTIC_VERSION=.*/ELASTIC_VERSION=${{ env.ELASTIC_VERSION }}/g" ./.env
        cat .env
     - name: Step 04 - Starting containers
       if: ${{ env.RUN_TEST == 'true'}}
       run: |
        cd ${{ env.PATH_TEMPLATE_BASIC_CLUSTER_AGENT }}
        sudo docker-compose up -d
     - name: Step 05 - Download Project wazuh-packages 
       if: ${{ env.RUN_TEST == 'true' }}
       uses: actions/checkout@v2
       with:
        repository: wazuh/wazuh-packages
        ref: '4.2'
        path: wazuh-packages
     - name: Step 06 - Building package
       if: ${{ env.RUN_TEST == 'true' }}
       run: |
        cd $GITHUB_WORKSPACE/wazuh-packages/wazuhapp
        echo fixing command...
        sed -i -e 's/'\|' cut -d \"\/\" \-f2//g' ./generate_wazuh_app.sh 
        echo run command...
        ./generate_wazuh_app.sh -b ${{ env.WAZUH_HEAD_BRANCH }} -s $GITHUB_WORKSPACE/wazuh-app-environments/packages -r 1
     - name: Step 07 - Installing package
       if: ${{ env.RUN_TEST == 'true' }}
       run: |
        cd $GITHUB_WORKSPACE/wazuh-app-environments/packages/
        PACKAGE_NAME=`ls *.zip`
        cd ${{ env.PATH_TEMPLATE_BASIC_CLUSTER_AGENT }}
        docker exec es_basic-wz_cluster-agent_kibana_1 bin/kibana-plugin install file:///packages/$PACKAGE_NAME
        sudo docker-compose restart kibana
        echo CONTINUES AFTER 20 SECONDS ...
        sleep 20s
     - name: Step 08 - Configuring ip container into wazuh.yml
       if: ${{ env.RUN_TEST == 'true' }}
       run: |
        IP_CONTAINER_MANAGER=$(docker exec es_basic-wz_cluster-agent_wazuh-manager-master_1 hostname -i)
        docker exec es_basic-wz_cluster-agent_kibana_1 cat ./data/wazuh/config/wazuh.yml
        docker exec es_basic-wz_cluster-agent_kibana_1 sed -i -e "s/url: https:\/\/localhost/url: https:\/\/$IP_CONTAINER_MANAGER/g" ./data/wazuh/config/wazuh.yml
        docker exec es_basic-wz_cluster-agent_kibana_1 cat ./data/wazuh/config/wazuh.yml
     - name: Step 09 - Download Project wazuh-qa 
       if: ${{ env.RUN_TEST == 'true' }}
       uses: actions/checkout@v2
       with:
        repository: wazuh/wazuh-qa
        ref: 'feature/frontend'
        path: wazuh-qa
     - name: Step 10 - Install Cypress Project Dependencies
       if: ${{ env.RUN_TEST == 'true' }}
       run: |
        cd $GITHUB_WORKSPACE/wazuh-qa/tests/frontend/test_kibana_app/
        npm install
        npm run cy:install
     - name: Step 11 - Run Cypress tests
       if: ${{ env.RUN_TEST == 'true' }}
       run: |
         cd $GITHUB_WORKSPACE/wazuh-qa/tests/frontend/test_kibana_app/
         npm run cypress:run-headless         
     #  continue-on-error: true
     - name: Step 12 - Upload Screenshots And Videos To Slack
       if: failure()
       uses: trymbill/cypress-slack-video-upload-action@v1.3.0
       with:
        workdir: wazuh-qa/tests/frontend/test_kibana_app/cypress
        token: ${{ secrets.ACTIONS_SLACK_TOKEN }}
        channels: 'daily-app-team'
        message-text: ${{ format('Workflow "{0}" job test triggered by {1} is FAILED for {2} - {3}', github.workflow, github.event_name, github.base_ref, github.head_ref) }}
