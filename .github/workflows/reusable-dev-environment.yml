# This workflow downloads the source code, mount it as volume in a Docker container, installs the plugin dependencies and run a command

name: Reusable - Dev environment

on:
  workflow_call:
    inputs:
      reference:
        required: true
        type: string
      command:
        required: true
        type: string
      docker_run_extra_args:
        type: string
        default: ''
      archive_name:
        type: string
        default: ''
      archive_path:
        type: string
        default: ''
      notify_jest_coverage_summary:
        type: boolean
        default: false

jobs:
  unit-test:
    name: Deploy a plugin in a development environment and run a command using a pre-built Docker image
    runs-on: ubuntu-22.04
    steps:
      - name: Step 01 - Download the plugin source code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.reference }}
          path: wazuh
      - name: Step 02 - Get the plugin platform, version and run commands in the Docker image
        run: |
          # Get the plugin platform and using the expected Docker images
          plugin_platform=kbn;
          echo "Getting the plugin platform...";
          find wazuh/opensearch_dashboards.json && { plugin_platform=osd; };
          echo "Plugin platform: $plugin_platform";

          # Get the plugin platform version
          echo "Getting the plugin platform version...";
          # Support plugins whose version is defined udner pluginPlatform or kibana properties
          plugin_platform_version=$(jq -r '.pluginPlatform.version, .kibana.version | select(. != null)' wazuh/package.json);
          echo "Plugin platform version: $plugin_platform_version";

          # Change the permissions of the plugin source code to use in the Docker image
          sudo chown 1000:1000 -R wazuh;

          # Run the Docker image, install the plugin dependencies and run the command
          [ "$plugin_platform" = "kbn" ] && { docker_env_plugin_platform="KIBANA_VERSION"; };
          [ "$plugin_platform" = "osd" ] && { docker_env_plugin_platform="OPENSEARCH_DASHBOARDS_VERSION"; };

          docker run -t --rm -e "${docker_env_plugin_platform}=${plugin_platform_version}" -v "`pwd`/wazuh:/home/node/kbn/plugins/wazuh" ${{ inputs.docker_run_extra_args }} "quay.io/wazuh/${plugin_platform}-dev:${plugin_platform_version}" bash -c "yarn config set registry \"https://registry.yarnpkg.com\";cd /home/node/kbn/plugins/wazuh && yarn && ${{ inputs.command }}";
      - name: Step 03 - Archive files
        if: ${{ inputs.archive_name && inputs.archive_path }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.archive_name }}
          path: ${{ inputs.archive_path }}
      - name: Step 04 - Notify on GitHub comment
        if: ${{ inputs.notify_jest_coverage_summary && github.event_name == 'pull_request' }}
        uses: AthleticNet/comment-test-coverage@1.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ./wazuh/target/test-coverage/coverage-summary.json
          title: "Check - Unit - Jest coverage (`yarn test:jest`)"
